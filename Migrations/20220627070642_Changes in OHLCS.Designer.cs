// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projekt.Models;

namespace Projekt.Migrations
{
    [DbContext(typeof(DBcontext))]
    [Migration("20220627070642_Changes in OHLCS")]
    partial class ChangesinOHLCS
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("Projekt.Models.Client", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdUser");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Projekt.Models.OHLC", b =>
                {
                    b.Property<string>("WatchedElementTicker")
                        .HasColumnType("varchar(100)");

                    b.Property<long>("t")
                        .HasColumnType("bigint");

                    b.Property<double>("c")
                        .HasColumnType("double");

                    b.Property<double>("h")
                        .HasColumnType("double");

                    b.Property<double>("l")
                        .HasColumnType("double");

                    b.Property<long>("n")
                        .HasColumnType("bigint");

                    b.Property<double>("o")
                        .HasColumnType("double");

                    b.Property<long>("v")
                        .HasColumnType("bigint");

                    b.Property<double>("vw")
                        .HasColumnType("double");

                    b.HasKey("WatchedElementTicker", "t");

                    b.ToTable("oHLCs");
                });

            modelBuilder.Entity("Projekt.Models.WatchedElement", b =>
                {
                    b.Property<string>("ticker")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("logo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ticker");

                    b.ToTable("WatchedElement");
                });

            modelBuilder.Entity("Projekt.Models.Watchlist", b =>
                {
                    b.Property<string>("ticker")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.HasKey("ticker", "IdUser");

                    b.HasIndex("IdUser");

                    b.ToTable("WatchedList");
                });

            modelBuilder.Entity("Projekt.Models.OHLC", b =>
                {
                    b.HasOne("Projekt.Models.WatchedElement", "Watched")
                        .WithMany("OHLCs")
                        .HasForeignKey("WatchedElementTicker")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Watched");
                });

            modelBuilder.Entity("Projekt.Models.Watchlist", b =>
                {
                    b.HasOne("Projekt.Models.Client", "Client")
                        .WithMany("Watchlist")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projekt.Models.WatchedElement", "WatchedElement")
                        .WithMany("Watchlist")
                        .HasForeignKey("ticker")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("WatchedElement");
                });

            modelBuilder.Entity("Projekt.Models.Client", b =>
                {
                    b.Navigation("Watchlist");
                });

            modelBuilder.Entity("Projekt.Models.WatchedElement", b =>
                {
                    b.Navigation("OHLCs");

                    b.Navigation("Watchlist");
                });
#pragma warning restore 612, 618
        }
    }
}
